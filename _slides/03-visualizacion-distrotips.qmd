---
title: "Distribuciones de Probabilidad III"
subtitle: "Trucos para graficar distribuciones"
format: live-html
sidebar: false
webr:
  packages:
  - ggplot2
engine: knitr
---

{{< include ../_extensions/r-wasm/live/_knitr.qmd >}}

## Grafico de densidad

La función `geom_density()` de `ggplot2` permite visualizar la distribución de una variable continua. A continuación, se muestra un ejemplo de cómo graficar la densidad de una variable aleatoria normal.

Este gráfico de densidad muestra la forma de la distribución de nuestros datos simulados, que siguen una distribución normal con una media de 50 y una desviación estándar de 10.

## {.smaller}

La diferencia con un histograma es que la densidad es una estimación suavizada de la distribución de los datos, lo que puede ser útil para visualizar la forma general de la distribución. Esto se logra mediante el uso de un *kernel* para suavizar la distribución de los datos. 
- ¿Qué significa que la densidad sea una "estimación suavizada de la distribución"? Imagina que tienes muchos puntos en una gráfica y quieres saber cómo están distribuidos, pero en lugar de hacer bloques como en un histograma, quieres dibujar una línea suave que pase por encima de todos esos puntos. Esa línea suaviza las variaciones de los datos y te da una idea más general de cómo se distribuyen, sin mostrarte cada "salto" de las barras como en el histograma. ¿
- Qué es el "kernel" que se usa para suavizar? Es una función matemática que se aplica a los datos para suavizarlos y obtener una estimación de la distribución. El kernel es como una pequeña campana o curva que se coloca en cada punto de tus datos para suavizar la distribución. En lugar de contar cada punto individualmente, el kernel ayuda a distribuir la "influencia" de cada punto hacia sus alrededores, creando una curva suave cuando sumas todas esas campanas. 

##

```{webr}
# Crear un gráfico de densidad de una variable normal
set.seed(123)
datos_normales <- rnorm(1000, mean = 50, sd = 10)

library(ggplot2)

ggplot(data = data.frame(x = datos_normales), aes(x = x)) +
  geom_density(fill = "skyblue", color = "darkblue", alpha = 0.5) +
  labs(title = "Distribución de Datos Normales", x = "Valor", y = "Densidad")

```

`ggplot(data, mapping = aes(x = col_B, y = ..density..)) +
  geom_histogram(binwidth = 10)`


## Sobreponer histograma y densidad

En ocasiones, es útil superponer un histograma y una gráfica de densidad para comparar la distribución de los datos de manera más efectiva. Esto puede ayudarte a visualizar la forma de la distribución y cómo se ajusta la densidad a los datos observados en el histograma.

```{webr}
#| warning: false

# Crear un histograma y una densidad superpuestos
ggplot(data = data.frame(x = datos_normales), aes(x = x)) +
  geom_histogram(aes(y = ..density..), fill = "lightgray", color = "black", bins = 30) +
  geom_density(fill = "skyblue", color = "darkblue", alpha = 0.5) +
  labs(title = "Histograma y Densidad de Datos Normales", x = "Valor", y = "Densidad")

```

## Gráfico de densidad con múltiples distribuciones

En algunos casos, es útil comparar la distribución de varias variables en un solo gráfico de densidad. Esto puede ayudarte a visualizar cómo se superponen o difieren las distribuciones de diferentes variables.

```{webr}
# Crear un gráfico de densidad con múltiples distribuciones
set.seed(123)
datos_normales_2 <- rnorm(1000, mean = 60, sd = 15)

ggplot() +
  geom_density(data = data.frame(x = datos_normales), aes(x = x), fill = "skyblue", color = "darkblue", alpha = 0.5) +
  geom_density(data = data.frame(x = datos_normales_2), aes(x = x), fill = "salmon", color = "darkred", alpha = 0.5) +
  labs(title = "Distribución de Datos Normales", x = "Valor", y = "Densidad") +
  theme_minimal()

```

## Sobreponer una distribución normal teórica sobre los datos

En ocasiones, es útil comparar la distribución de los datos con una distribución normal teórica. Esto puede ayudarte a evaluar si los datos siguen una distribución normal o si hay desviaciones significativas. NOTA: esto no es una prueba formal de normalidad, pero puede darte una idea general de cómo se ajustan los datos a una distribución normal.

```{webr}
#| warning: false

# Crear un histograma y una densidad superpuestos
ggplot(data = data.frame(x = datos_normales), aes(x = x)) +
  geom_histogram(aes(y = ..density..), fill = "lightgray", color = "black", bins = 30) +
  # geom_density(fill = "skyblue", color = "darkblue", alpha = 0.5) +
  stat_function(fun = dnorm, args = list(mean = mean(datos_normales), sd = sd(datos_normales)), color = "red", size = 1) +
  labs(title = "Histograma y Densidad de Datos Normales", x = "Valor", y = "Densidad")

```

`ggplot(sleep, mapping = aes(x = sleep_wkday)) +
  geom_histogram(mapping = aes(y = ..density..), binwidth = 1) +
  geom_function(
    fun = dnorm,
    args = list(
      mean = mean(sleep$sleep_wkday, na.rm = TRUE),
      sd = sd(sleep$sleep_wkday, na.rm = TRUE)
    ),
    color = "blue"
  )`


## Ejercicio

### The Normal Distribution

- La distribución normal tiene 2 parámetros, la media $\mu$ y la desviación estándar $\sigma$.

The normal distribution has 2 parameters, the mean $\mu$ and the standard deviation $\sigma$.
For a normal distribution with mean $\mu =$
`{ojs} meanTgl` and $\sigma =$ `{ojs} sdTgl`, here is a plot of the probability density:

```{ojs}
//| echo: false
import {Tangle} from "@mbostock/tangle"

// Setup Tangle reactive inputs
viewof mean = Inputs.input(0);
viewof sd = Inputs.input(1);
meanTgl = Inputs.bind(Tangle({min: -5, max: 5, minWidth: "1em", step: 0.1}), viewof mean);
sdTgl = Inputs.bind(Tangle({min: 0, minWidth: "1em", step: 0.01}), viewof sd);

// draw plot in R
draw_plot(mean, sd)
```

::: {.cell edit='false' define='draw_plot'}
```{webr}
#| edit: false
#| output: false
#| define:
#|   - draw_plot
draw_plot <- function(mean, sd) {
  x <- seq(-5, 5, length = 100)
  y <- dnorm(x, mean = mean, sd = sd)
  plot(x, y, type = "l", lwd = 2, ylim = c(0,1))
}
```
:::

Recreate the plot above in base R graphics.

```{webr}
#| exercise: tangle
#| input:
#|  - mean
#|  - sd
#| caption: Plot Normal Distribution
x <- seq(-5, 5, length = 100)
y <- ______
______
```

::: {.solution exercise="tangle"}
**Solution**:

```{webr}
#| exercise: tangle
#| solution: true
x <- seq(-5, 5, length = 100)                                 # <1>
y <- dnorm(x, mean = ${mean}, sd = ${sd})                     # <2>
plot(x, y, type = "l", lwd = 2, ylim = c(0,1))                # <3>
```
1. Generate values for the x axis.
2. Generate values for the y axis using the normal distribution density function `dnorm()`, with mean ${mean} and standard deviation ${sd}.
3. Plot the values as a line (`type = "l"`) and with thicker width (`lwd = 2`).
:::

## Reflexión y Discusión

- ¿Qué diferencias observas entre un histograma y un gráfico de densidad?
- ¿Por qué crees que es útil superponer un histograma y una gráfica de densidad?
- ¿Qué información adicional puedes obtener al comparar múltiples distribuciones en un solo gráfico de densidad?
