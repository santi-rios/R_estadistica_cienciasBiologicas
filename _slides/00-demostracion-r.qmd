---
title: "Demostración de Análisis de Datos con R"
author:
  - name: "Mtro. Santiago Ríos"
    email: santiagoboo99@gmail.com
    affiliation: 
      - name: Cursos Orca
        city: CDMX
        url: orcaasesina.com
title-slide-attributes:
  data-background-image: "https://r-charts.com/en/miscellaneous/brickr_files/figure-html/brickr.png"
  data-background-size: contain
  data-background-opacity: "0.5"
format: 
    live-revealjs: 
        theme: serif
        scrollable: true
        progress: true
        slide-number: true
        incremental: true
        lang: es
        logo: "https://cran.r-project.org/Rlogo.svg"
webr:
    packages: 
        - gapminder
        - dplyr
        - ggplot2
        - plotly
        - ggseg
        - leaflet
engine: knitr
---

{{< include ../_extensions/r-wasm/live/_knitr.qmd >}}

## Introducción

::: {.incremental}
- En esta demostración, se ilustra el poder de R para el análisis de datos, el cálculo estadístico y la visualización.
- No te preocupes si no entiendes los detalles del código, lo importante es ver cómo se pueden realizar tareas complejas con R.
- En este ejemplo, vamos a utilizar el popular conjunto de datos *gapminder*, que contiene información sobre la esperanza de vida, el producto interno bruto (PIB) *per cápita* y la población a lo largo del tiempo para varios países.
:::

## Objetivo

::: {.incremental}
- Observa como en solo unas pocas líneas de código, podemos filtrar, resumir y visualizar estos datos (que contiene más de ¡10,000 observaciones!) en pocos segundos.
- Realiza un gráfico de las regiones subcorticales del cerebro con solo 5 líneas de código en R.
::: 

---

## Paso 1. Importar y Explorar los Datos

Primero vamos a filtrar los datos para el año 2007 y calcular estadísticas descriptivas para el Producto interno bruto (GDP) *per capita*. Como resultado, tendremos una tabla con el promedio, la mediana y la desviación estándar del GDP *per capita* en 2007.

```{webr}
# Cargar paquetes necesarios
library(gapminder)
library(dplyr)
library(ggplot2)

# Cargar el conjunto de datos gapminder
data("gapminder")

# 1. Análisis de Datos: Filtrar y resumir
summary_2007 <- gapminder %>%
  filter(year == 2007) %>%
  summarize(promedio = mean(gdpPercap),
            mediana = median(gdpPercap),
            desviacion.estandar = sd(gdpPercap))

print("Estadísticas descriptivas de GDP per Capita en 2007:")
kable(summary_2007)

```

## Paso 2. Agrupar datos por continente

Ahora, supongamos que nos interesa saber la esperanza de vida promedio por continente. Vamos a agrupar los datos por continente y calcular el promedio de esperanza de vida para cada uno. Corre y visualiza el siguiente código:

```{webr}
# Calcular el promedio de esperanza de vida por continente

esperanza.por.continente <- gapminder %>%
  group_by(continent) %>%
  summarize(promedio = mean(lifeExp))

print("Promedio de Esperanza de Vida por Continente:")
kable(esperanza.por.continente)

```

## Ojo

::: {.incremental}
- Nota que estamos reutilizando el conjunto de datos original, pero esta vez agrupando por continente. 
- Esto es posible gracias a que R no modificamos el conjunto de datos original, lo que nos permite realizar múltiples análisis sin perder información.
::: 

## Paso 3. Visualización de Datos

Finalmente, vamos a visualizar la relación entre el GDP *per cápita* y la esperanza de vida a lo largo de los años. Utilizaremos un gráfico de dispersión donde el color representa el continente y el tamaño del dato graficado representa el tamaño de la población.

```{webr}

p <- ggplot(gapminder, aes(x = gdpPercap, y = lifeExp, color = continent, size = pop)) +
  geom_point(alpha = 0.7) +
  scale_x_log10() +
  labs(title = "Relación entre PIB per cápita y Esperanza de Vida (1952-2007)",
       x = "PIB per Capita (escala logarítmica)",
       y = "Esperanza de Vida",
       color = "Continente",
       size = "Población") +
  theme_minimal()

# Visualiza el gráfico
print(p)

```

## Mejorar la Visualización

::: {.incremental}
- En el gráfico pasado, tal vez es difícil de ver la relación entre el GDP *per cápita* y la esperanza de vida debido a la escala logarítmica en el eje x, además de tener una gran cantidad de datos.
- Para entender mejor la relación entre estas variables, podemos generar un gráfico interactivo que permita explorar los datos de manera más detallada.
- Observa como R nos permite generar este tipo de visualizaciones complejas con solo unas pocas líneas de código.
:::

## Visualización Interactiva

A continuación, se muestra un gráfico interactivo que permite explorar la relación entre el GDP *per cápita* y la esperanza de vida a lo largo de los años. Corre el código con el botón play en la parte inferior izquierda del gráfico e inicia la visualización. Puedes hacer clic en los puntos para ver información detallada sobre cada país.

```{webr}
#| warning: false

library(plotly)

# Crear el gráfico animado con plotly
fig <- gapminder %>%
  plot_ly(x = ~gdpPercap, y = ~lifeExp, 
          color = ~continent, size = ~pop, 
          frame = ~year, text = ~country, 
          hoverinfo = "text",
          type = 'scatter', mode = 'markers',
          marker = list(sizemode = 'diameter', opacity = 0.7)) %>%
  layout(title = "Relación entre PIB per cápita y Esperanza de Vida (1952-2007)",
         xaxis = list(title = "PIB per Cápita (escala logarítmica)", type = "log"),
         yaxis = list(title = "Esperanza de Vida"),
         showlegend = TRUE) %>%
  animation_opts(frame = 1000, easing = "elastic", redraw = FALSE) %>%
  animation_slider(currentvalue = list(prefix = "Año: "), font = list(color="red"))

# Mostrar el gráfico animado
fig

```

## 

::: {.incremental}
- Observa como el código del gráfico original y el gráfico interactivo son muy similares.
- La estructura base de ambos códigos es la misma. Como verás en este curso, esta estructura es la misma para casi TODOS los gráficos que generemos en R.
- Esta consistencia de R es una de las razones por las que es tan popular para el análisis de datos y la visualización ya que una vez que aprendes a hacer un tipo de gráfico (o análisis estadístico), puedes aplicar ese conocimiento a muchos otros tipos de gráficos.
- Lo importante será que entiendas los conceptos detrás de los gráficos y análisis que te mostramos, y que puedas aplicarlos a tus propios datos. 
:::

## 

Por ejemplo, observa y corre el siguiente código que grafica un hemisferio cerebral con  regiones subcorticales. De nuevo, el código base es muy similar al que hemos visto antes, pero el resultado es un gráfico completamente diferente basado en un atlas cerebral.

```{webr}
library(ggplot2)
library(ggseg) # librería de atlas cerebrales

ggplot() +
  geom_brain(atlas = aseg, 
             side = "coronal", 
             hemi = "left") +
  theme_minimal()

```


##

De nuevo, observa como el código base es muy similar al que hemos visto antes, pero el resultado es un gráfico completamente diferente:

```{webr}
library(leaflet)

leaflet() |>
  addTiles() |>
  addMarkers(lng = -99.18735796750228, lat = 19.33348477957739, popup = "CUUU")
```

---

## Reflexión


- Este ejemplo ofrece una pequeña muestra del poder de R para manejar, analizar y visualizar cantidades ricas de datos y muestra algunas de las muchas capacidades que podrán dominar mediante la constancia y dedicación en su aprendizaje del lenguaje con este curso.
- Como observaste, R es un lenguaje muy versátil y poderoso que te permitirá realizar análisis de datos complejos y visualizaciones interactivas con relativamente poco esfuerzo.

##

- En este curso, aprenderás los fundamentos de R y cómo aplicarlos a problemas del mundo real. A medida que avances en el curso, te animamos a experimentar con tus propios datos y a explorar las muchas posibilidades que ofrece R para el análisis de datos.
- Por último, nuestro curso se da de manera interactiva para todos los conceptos, como en esta presentación. De esta manera podrás practicar el código en tiempo real y ver los resultados de tus análisis de datos al mismo tiempo que estudias los conceptos teóricos. Sin embargo, también habrá ejercicios que requieran que utilices tu propio entorno de R en tu computadora para completarlos.
