---
title: "Medidas de Tendencia central"
subtitle: "Media, moda, mediana, varianza, desviación estándar y rango intercuartílico"
author:
  - name: "Mtro. Santiago Ríos"
    email: santiagoboo99@gmail.com
    affiliation: 
      - name: Cursos Or ca
        city: CDMX
        url: orcaasesina.com
format: live-html
sidebar: false
webr:
    packages: 
        - ggplot2
        - dplyr
# pyodide: 
#     packages: 
#         - scikit-learn
#         - pandas
#         - matplotlib
#         - seaborn
#         - statsmodels
engine: knitr
---

{{< include ../_extensions/r-wasm/live/_knitr.qmd >}}

## Introducción

- Las medidas de tendencia central y dispersión son fundamentales para describir las características principales de un conjunto de datos. 
- Estas nos ayudan a comprender tanto el "centro" de los datos como la "dispersión". 
- En esta lección, exploraremos cómo calcular estas medidas en R y qué información nos proporcionan sobre los datos.

---

## Preparación de Datos

- Para trabajar en esta lección, usaremos un conjunto de datos proporcionado por R. 
- Este conjunto de datos (`PlantGrowth`) contiene información sobre la altura de las plantas de trigo en diferentes momentos. 
- Vamos a cargar y explorar estos datos para comprender mejor su estructura.

```{webr}

# Cargar el conjunto de datos
data("PlantGrowth")

# Mostrar las primeras filas del conjunto de datos
head(PlantGrowth)

# Resumen del conjunto de datos
summary(PlantGrowth)

```

::: {.callout}
- El conjunto de datos `PlantGrowth` contiene 30 observaciones y 2 variables.
- La variable `weight` representa la altura de las plantas de trigo.
- La variable `group` indica el grupo al que pertenece cada planta.
- La función `summary()` nos proporciona un resumen de las estadísticas básicas de las variables. Observa que la variable `weight`, al ser una variable numérica, tiene medidas de tendencia central y dispersión, mientras que la variable `group` es categórica y solo muestra la frecuencia de cada categoría. Al finalizar esta lección esto quedará más claro.
:::

# Medidas de Tendencia Central

## Media - Calcular con R

- La media es el promedio de todos los valores en un conjunto de datos.
- Se calcula sumando todos los valores y dividiendo por el número total de observaciones.

```{webr}

# Calcular la media de la variable "weight"
media.pesos <- mean(PlantGrowth$weight)

# Mostrar la media
media.pesos

```

## Media - Calcular con R y dplyr

::: {.callout-note}
- En este caso, para acceder a la variable `weight` del conjunto de datos `PlantGrowth`, usamos `$` para indicar que queremos trabajar con esa columna específica.
- Esto quiere decir lo siguiente: `PlantGrowth$weight` selecciona la columna `weight` del conjunto de datos `PlantGrowth`. Luego, aplicamos la función `mean()` a esa columna para calcular la media.
- Otra forma de acceder a la variable `weight` y calcular la media es con el paquete `dplyr`. Este paquete es muy útil para manipular y resumir datos de forma sencilla y eficiente ya que se basa en el concepto de "gramática de datos". Esta gramática se compone de verbos que permiten realizar operaciones comunes en el análisis de datos, como filtrar, agrupar, resumir y visualizar.
- En este caso, usamos el operator `%>%` (pipe) para encadenar las operaciones y realizar el cálculo de la media de una forma más legible y eficiente. Este operador toma el resultado de la operación anterior y lo pasa como argumento a la siguiente operación.
- Observa cómo se puede calcular la media con `dplyr`:

```{webr}	
library(dplyr)

PlantGrowth %>%
  summarize(media = mean(weight))

```

- La lógica de este código es la siguiente: 
- `PlantGrowth %>% summarize(media = mean(weight))` selecciona el conjunto de datos `PlantGrowth`, calcula la media de la variable `weight` y la resume en una tabla con una columna llamada `media`.
- Si todavía no has instalado el paquete `dplyr`, puedes hacerlo con el comando `install.packages("dplyr")`.
- Si todavía es un poco confuso, no te preocupes, pronto verás más ejemplos.
- Una gran ventaja de dplyr y encadenar con pipas es que puedes realizar múltiples operaciones en una sola línea de código, lo que facilita la manipulación y el análisis de datos.

:::

## Media - visualización con ggplot2

- Para visualizar la media en un gráfico, podemos agregar una línea vertical en la posición de la media.
- Usaremos el paquete `ggplot2` para crear un histograma de los datos y agregar la línea de la media.
- Observa cómo se puede hacer esto en R:

```{webr}

library(ggplot2)

# Crear un histograma de los datos
histograma <- ggplot(PlantGrowth, aes(x = weight)) +
  geom_histogram(binwidth = 1, fill = "lightblue", color = "black") +
  geom_vline(xintercept = media.pesos, color = "red", linetype = "dashed", size = 1) +
  labs(title = "Distribución de Altura de Plantas de Trigo",
       x = "Altura (peso)", y = "Frecuencia")

# Mostrar el histograma
histograma

```


## Medidas de Tendencia Central

    Media: Promedio de todos los valores de un conjunto de datos. Es sensible a los valores atípicos.
    Mediana: El valor central cuando los datos están ordenados. No es afectada por valores atípicos.
    Moda: El valor que ocurre con más frecuencia en el conjunto de datos. Algunos conjuntos pueden ser multimodales (tener más de una moda).


```{webr}

library(dplyr)

# Calcular la mediana y la moda
PlantGrowth %>%
  summarize(mediana = median(weight),
            moda = table(weight) %>% as.data.frame() %>% filter(Freq == max(Freq)) %>% pull(weight))

```