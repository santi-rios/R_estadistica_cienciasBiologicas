---
title: "Prueba de t - Ejemplo Completo"
author:
  - name: "Mtro. Santiago Ríos"
    email: santiagoboo99@gmail.com
    affiliation: 
      - name: Cursos Orca
        city: CDMX
        url: orcaasesina.com
format: 
    live-html:
        highlightStyle: github
        highlightLines: true
        theme: superhero
toc: true
sidebar: false
webr:
    packages: 
        - tidyverse
        - ggpubr
        - car
    render-df: gt-interactive
engine: knitr
---

Vamos a realizar un ejemplo de una prueba de t desde 0 hasta la obtención de resultados con gráficos presentables.

## Datos

- Vamos a similuar datos de pesos de 10 ratones

```{webr}
#| autorun: true
#| warning: false

set.seed(1234)
my_data <- data.frame(
  nombre = paste0(rep("Raton_", 10), 1:10),
  peso = round(rnorm(10, 20, 2), 1)
)

my_data
```

- Vamos a obtener un resumen estadístico de los datos:

```{webr}
#| autorun: true
#| warning: false

summary(my_data$peso)
```

- Min: el valor mínimo
- 1st Qu.: el primer cuartil. 25% de los valores son menores que este.
- Mediana: el valor mediano. La mitad
- 3rd Qu.: el tercer cuartil. 75% de los valores son mayores que este.
- Max.: el valor máximo



> Vamos a visualizar los datos con un boxplot

```{webr}
#| autorun: true
#| warning: false

library(ggpubr)

ggboxplot(
  my_data$peso,         
  ylab = "Peso (g)", 
  xlab = FALSE,
  add = "jitter",
  ggtheme = theme_minimal()
)
```

> Antes de realizar la prueba de t, vamos a realizar una prueba de normalidad

- Shapiro-Wilk test:
    - Hipótesis nula: los datos siguen una distribución normal
    - Hipótesis alternativa: los datos no siguen una distribución normal

```{webr}
#| autorun: true
#| warning: false
shapiro.test(my_data$peso) # => p-value = 0.6993
```

- El p-valor es mayor que el nivel de significancia 0.05, lo que implica que la distribución de los datos no es significativamente diferente de la distribución normal. En otras palabras, podemos asumir la normalidad.

- También podemos inspeccionar visualmente la normalidad de los datos utilizando gráficos Q-Q (quantile-quantile plots). Q-Q plot dibuja la correlación entre una muestra dada y la distribución normal.

```{webr}
#| autorun: true
#| warning: false

ggqqplot(my_data$peso, ylab = "Peso", xlab = "Teórico", ggtheme = theme_minimal())

```

- Como cumple este supuesto, vamos a realizar la prueba de t (paramétrica) de una muestra.
- Supongamos que queremos saber si el peso promedio de los ratones difiere de 25g (prueba de dos colas porque puede ser mayor o menor).


```{webr}
#| autorun: true
#| warning: false
# 
res <- t.test(my_data$peso, mu = 25)
# 
res
```

- En este resultado, t es el valor estadístico de la prueba t (t = -9.078),
- df es el número de grados de libertad (df= 9),
- p-value es el nivel de significancia de la prueba t (p-value = 7.95310^{-6}).
- conf.int es el intervalo de confianza del promedio al 95% (conf.int = [17.8172, 20.6828]);
- sample estimates es el valor promedio de la muestra (mean = 19.25).

> si quisieras hacer una prueba de una cola, puedes hacerlo de la siguiente manera:

```{webr}
#| autorun: true
#| warning: false
t.test(my_data$peso, mu = 25,
              alternative = "less")
```


```{webr}
#| autorun: true
#| warning: false
t.test(my_data$peso, mu = 25,
              alternative = "greater")
```

::: {.callout-tip}
Si quisieras acceder a los valores específicos de la prueba de t, puedes hacerlo de la siguiente manera:

El resultado de la función t.test() es una lista que contiene los siguientes componentes:

   > statistic: el valor de la estadística de prueba t
   > parameter: los grados de libertad para la estadística de prueba t
   > p.value: el valor p para la prueba
   > conf.int: un intervalo de confianza para la media apropiado para la hipótesis alternativa especificada.
   > estimate: las medias de los dos grupos que se comparan (en el caso de la prueba t independiente) o la diferencia en las medias (en el caso de la prueba t emparejada).

```{webr}
#| autorun: true
#| warning: false
# valor p
res$p.value
```

```{webr}
#| autorun: true
#| warning: false
# estimate
res$estimate
```

```{webr}
#| autorun: true
#| warning: false
# intervalos de confianza
res$conf.int
```

:::
