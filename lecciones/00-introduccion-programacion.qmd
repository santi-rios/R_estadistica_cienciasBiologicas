---
title: "Introducción a la Programación"
subtitle: "Fundamentos para bioestadística con R y Python"
author: "Cursos Orca"
format: 
    live-html: 
        toc: true
        toc-depth: 3
        toc-title: Contenido de la Lección
        lang: es
navbar: false
webr:
    render-df: gt
    packages: 
        - ggplot2
engine: knitr
---

{{< include ../_extensions/r-wasm/live/_knitr.qmd >}}

## ¿Qué es Programar?

Programar, en esencia, es dar instrucciones a una computadora para que realice tareas específicas. Estas instrucciones se escriben en un lenguaje de programación. Piensa en esto como escribir una receta de cocina detallada: cada paso debe ser claro y preciso para que la computadora (el cocinero) pueda seguirlo y producir el resultado deseado.

:::: {.columns}

::: {.column width="50%"}

![Si no le damos las instrucciones claras y detalladas a la computadora, nuestro resultado será un desastre](https://cdn.myportfolio.com/45214904-6a61-4e23-98d6-b140f8654a40/483e1776-7126-4255-8e84-0557c397025f_rw_1200.png?h=bf487bf87b6ec11f1806dc1094def1d3)

:::

::: {.column width="50%"}

![Con las instrucciones precisas, el resultado será consistentemente lo deseado](https://cdn.myportfolio.com/45214904-6a61-4e23-98d6-b140f8654a40/5c559781-f15a-4be9-8af0-426fcc71a9e8_rw_1200.png?h=c7af78be544ee13532fb2152727af996)

:::

::::



--------

En este curso, podrás seleccionar si deseas tomar las lecciones en `R` o `Python`. Selecciona en cada lección la pestaña del lenguaje que desees (puedes cambiar en cualquier momento):

![Seleccionar R o Python cambia toda la lección al lenguaje seleccionado](../images/seleccionar_r_python.png){fig-align="center"}

Cada lenguaje está definido por sus reglas particulares:

- *Un léxico*: conjunto de palabras/frases válidas para escribir las instrucciones.
- *Sintaxis*: reglas que establecen cómo se pueden combinar las distintas partes.
- *Semántica*: significado que se les da a las palabras o frases.

Adicionalmente, R y Python utilizan palabras para representar simbólicamente las acciones que debe realizar la computadora. Por ejemplo, vamos a ejecutar nuestro primer código al pedirle a R/Python que nos muestre el texto "Hola Mundo". Para esto, usaremos la instrucción `print()`, que nos "imprime" o muestra el valor dentro del paréntesis. Selecciona R/Python y haz click en el botón "Run Code" para ver el resultado.

::: {.panel-tabset group="language"}

## R

```{webr}
print("Hola Mundo")
```

## Python

```{pyodide}
print("Hola Mundo")
```

:::

::: {.callout-note}

Al seleccionar R o Python en la pestaña, estás seleccionado un *interpretador*, el cuál es un programa que toma las acciones que escribes en R/Python y lo traduce a instrucciones que la máquina puede entender (`1 y 0`). Por esto, asegúrate de seleccionar el interprete adecuado ya que el interprete de R no sabe interpretar comandos de Python y viceversa.

:::

## Operaciones Aritméticas Básicas

Ahora que tienes una idea general, vamos a sumergirnos en la práctica. La forma más básica de interactuar con R y Python es usándolos como una calculadora.

Primero corre el código en la consola de R o Python para ver los resultados y después puedes modificarlo para hacer más operaciones.

### Suma

:::: {.panel-tabset group="language"}

## R

```{webr}
# Suma
3 + 5
```

## Python

```{pyodide}
# Suma
3 + 5
```

::::

::: {.callout-important}
## Punto Clave - Salida o Output

- Observa cómo al ejecutar el código, se muestra el resultado de la operación.
- Este resultado se conoce como la **salida** u **output**.

Si realizas múltiples operaciones, verás múltiples salidas.

:::: {.panel-tabset group="language"}

## R

```{webr}
# Output 1
10 + 15

# Output 2
30 + 7
```

## Python

En Python, para asegurar que cada resultado se muestre explícitamente, a menudo usamos la función `print()`.

```{pyodide}
# Output 1
print(10 + 15)

# Output 2
print(30 + 7)
```

::::
:::

### Resta

:::: {.panel-tabset group="language"}

## R

```{webr}
# Resta
100 - 45
```

## Python

```{pyodide}
# Resta
100 - 45
```

::::

::: {.callout-important}
## Punto Clave - Comentarios

- En R y Python, el símbolo `#` se utiliza para escribir **comentarios**.
- El intérprete (el programa que ejecuta tu código R o Python) ignora cualquier texto que siga a un `#` en la misma línea.
- Los comentarios son cruciales para:
    - Explicar qué hace tu código.
    - Hacerlo más legible para ti (en el futuro) y para otros.
    - Desactivar temporalmente líneas de código sin borrarlas.

Observa cómo en el siguiente bloque, si las operaciones están comentadas, no se produce ninguna salida.

:::: {.panel-tabset group="language"}

## R

```{webr}
# División (comentario)
# 100 / 2
```

## Python

```{pyodide}
# División (comentario)
# 100 / 2
```

::::

Quita el comentario (borra el `#`) de la división `100 / 2` y vuelve a ejecutar el código para ver la salida (debería ser `50`). Si quitas el comentario de la primera línea, obtendrás un error. Esto se verá más adelante.

:::

Continuaremos con más operaciones y conceptos en las siguientes secciones.